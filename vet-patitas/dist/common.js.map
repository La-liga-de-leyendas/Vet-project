{"version":3,"sources":["./src/app/shared/services/products.service.ts","./src/app/shared/services/vet-booking.service.ts","./src/app/shared/services/vetservices.service.ts","./src/app/shared/services/products-buyed.service.ts","./src/app/shared/services/user.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class ProductsService {\r\n\r\n  url = environment.app.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getProducts(): Observable<any> {\r\n    return this.http.get(`${this.url}/products.json`);\r\n  }\r\n\r\n  public getProductsById(id: any): Observable<any> {\r\n    return this.http.get(`${this.url}/products.json?orderBy=\"storeId\"&equalTo=\"${id}\"&print=pretty`);\r\n  }\r\n\r\n  public addProducts(product: any): Observable<any> {\r\n    return this.http.post(`${this.url}/products.json`, product);\r\n  }\r\n\r\n  public deleteProducts(id: any): Observable<any> {\r\n    return this.http.delete(`${this.url}/products/${id}.json`);\r\n  }\r\n\r\n  public updateProducts(id: any, product: any): Observable<any> {\r\n    return this.http.put(`${this.url}/products/${id}.json`, product);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegisterauthService } from './registerauth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VetBookingService {\r\n  url = environment.app.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getVetBookingById(id: any): Observable<any> {\r\n    return this.http.get(`${this.url}/VetBookings.json?orderBy=\"uui\"&equalTo=\"${id}\"&print=pretty`);\r\n  }\r\n\r\n  public addVetBooking(booking: any): Observable<any> {\r\n    return this.http.post(`${this.url}/VetBookings.json`, booking);\r\n  }\r\n  public getVetBooking(): Observable<any> {\r\n    return this.http.get(`${this.url}/VetBookingss.json`);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class VetServicesService {\r\n\r\n  url = environment.app.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getVetServices(): Observable<any> {\r\n    return this.http.get(`${this.url}/services.json`);\r\n  }\r\n\r\n  public getVetServicesById(id: any): Observable<any> {\r\n    return this.http.get(`${this.url}/services.json?orderBy=\"storeId\"&equalTo=\"${id}\"&print=pretty`);\r\n  }\r\n\r\n  public addServices(service: any): Observable<any> {\r\n    return this.http.post(`${this.url}/services.json`, service);\r\n  }\r\n\r\n  public deleteServices(id: any): Observable<any> {\r\n    return this.http.delete(`${this.url}/services/${id}.json`);\r\n  }\r\n\r\n  public updateServices(id: any, service: any): Observable<any> {\r\n    return this.http.put(`${this.url}/services/${id}.json`, service);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsBuyedService {\r\n\r\n  url = environment.app.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getProductsBuyedById(id: any): Observable<any> {\r\n    return this.http.get(`${this.url}/ProductsBuyed.json?orderBy=\"uui\"&equalTo=\"${id}\"&print=pretty`);\r\n  }\r\n\r\n  public addProductsToBuy(product: any): Observable<any> {\r\n    return this.http.post(`${this.url}/ProductsBuyed.json`, product);\r\n  }\r\n  public getProductsBuyed(): Observable<any> {\r\n    return this.http.get(`${this.url}/ProductsBuyed.json`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  url = environment.app.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getUsers(): Observable<any> {\r\n    return this.http.get(`${this.url}/users.json`);\r\n  }\r\n\r\n  public addUsers(user: any): Observable<any> {\r\n    return this.http.post(`${this.url}/users.json`, user);\r\n  }\r\n\r\n  public getIdUser(id: any): Observable<any> {\r\n    return this.http.get(`${this.url}/users.json?orderBy=\"uui\"&equalTo=\"${id}\"&print=pretty`);\r\n  }\r\n\r\n  public updateProducts(id: any, product: any): Observable<any> {\r\n    return this.http.put(`${this.url}/users/${id}.json`, product);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}