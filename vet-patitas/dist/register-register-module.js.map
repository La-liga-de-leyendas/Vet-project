{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/register/register.module.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { RegisterauthService } from '../shared/services/registerauth.service';\r\nimport { UserService } from '../shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  userForm: FormGroup;\r\n\r\n  userAddSubs: Subscription;\r\n\r\n  constructor(private formBuilder: FormBuilder, public register_service: RegisterauthService, public users_service: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userForm = this.formBuilder.group({\r\n      email: ['', [ Validators.required , Validators.maxLength(31), Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\r\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(23)]],\r\n      cellphone: ['', [Validators.required, Validators.pattern(\"^[6-7][0-9]*$\")]],\r\n      address: ['', [Validators.required, Validators.maxLength(95)]],\r\n     });\r\n  }\r\n\r\n  onEnviar2(): void {\r\n    //console.log('FORM GROUP: ', this.userForm.value);\r\n\r\n    this.userAddSubs = this.users_service.addUsers({\r\n      ...this.userForm.value\r\n    }\r\n  ).subscribe(res => {\r\n    console.log('RSPUESTA: ', res);\r\n  },\r\n    err => {\r\n     console.log('ERROR DE SERVIDOR');\r\n    }\r\n  );\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"column1\">\r\n        <div class=\"image-pets\">\r\n            <img src=\"../../assets/images/signup.png\" class=\"\" alt=\"login\" width=\"500\" height=\"500\">\r\n        </div>\r\n        <div class=\"label-for-subtitles-register\">\r\n            <a>Patitas Site, una plataforma donde podrás encontrar lo que necesites para tu mascota y más</a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"column2\">\r\n        <mat-card class=\"example-card\">\r\n\r\n            <mat-card-header>\r\n                <mat-card-title style=\"text-align: center; color: #888888; font-weight: bold; \">Comienza por ingresar tus datos y verifícalos antes de enviarlos</mat-card-title>\r\n            </mat-card-header>\r\n\r\n            <mat-card-content style=\"display: flex; flex-direction: column;\">\r\n                <form [formGroup]=\"userForm\" style=\"display: flex; flex-direction: column;\">\r\n                    <!--EMAIL-->\r\n                    <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n                        <div class=\"label-for-subtitles\">Correo Electrónico:</div>\r\n                    </div>\r\n                    <mat-form-field>\r\n                        <div class=\"input-details\">\r\n                            <input matInput type=\"email\" required ngModel name=\"email\" #userEmail formControlName=\"email\" maxlength=\"32\">\r\n                        </div>\r\n                    </mat-form-field>\r\n\r\n                    <div *ngIf=\"userForm.get('email').invalid && (userForm.get('email').touched || userForm.get('email').dirty)\" class=\"alert alert-danger\">\r\n\r\n                        <div *ngIf=\"userForm.get('email').errors.required\">\r\n                            Email requerido\r\n                        </div>\r\n\r\n                        <div *ngIf=\"userForm.get('email').errors.maxlength\">\r\n                            Email demasiado largo\r\n                        </div>\r\n\r\n                        <div *ngIf=\"userForm.get('email').errors.pattern\">\r\n                            Email inválido\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!--PASSWORD-->\r\n                    <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\r\n                        <div class=\"label-for-subtitles\">Contraseña:</div>\r\n                    </div>\r\n                    <mat-form-field>\r\n                        <div class=\"input-details\">\r\n                            <input matInput type=\"password\" required name=\"password\" ngModel #userPwd formControlName=\"password\" maxlength=\"24\">\r\n                        </div>\r\n                    </mat-form-field>\r\n\r\n                    <div *ngIf=\"userForm.get('password').invalid && (userForm.get('password').touched || userForm.get('password').dirty)\" class=\"alert alert-danger\">\r\n\r\n                        <div *ngIf=\"userForm.get('password').errors.required\">\r\n                            Contraseña requerida\r\n                        </div>\r\n\r\n                        <div *ngIf=\"userForm.get('password').errors.maxlength\">\r\n                            Esta contraseña es demasiado larga\r\n                        </div>\r\n\r\n                        <div *ngIf=\"userForm.get('password').errors.minlength\">\r\n                            La contraseña debe tener al menos 6 caracteres\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!--CELULAR-->\r\n                    <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\"><i class=\"fas fa-mobile-alt\"></i></span>\r\n                        <div class=\"label-for-subtitles\">Celular:</div>\r\n                    </div>\r\n                    <mat-form-field>\r\n                        <div class=\"input-details\">\r\n                            <input matInput type=\"text\" required name=\"celular\" ngModel formControlName=\"cellphone\" #userPhone maxlength=\"8\">\r\n                        </div>\r\n                    </mat-form-field>\r\n\r\n                    <div *ngIf=\"userForm.get('cellphone').invalid && (userForm.get('cellphone').touched || userForm.get('cellphone').dirty)\" class=\"alert alert-danger\">\r\n\r\n                        <div *ngIf=\"userForm.get('cellphone').errors.required\">\r\n                            Teléfono celular requerido\r\n                        </div>\r\n\r\n                        <div *ngIf=\"userForm.get('cellphone').errors.pattern\">\r\n                            Parece que este número no es válido en Bolivia\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!--DIRECCION-->\r\n                    <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\"><i class=\"fas fa-map-marker-alt\"></i></span>\r\n                        <div class=\"label-for-subtitles\">Dirección:</div>\r\n                    </div>\r\n                    <mat-form-field>\r\n                        <div class=\"input-details\">\r\n                            <input matInput type=\"text\" required name=\"direccion\" ngModel formControlName=\"address\" #userAdress maxlength=\"96\">\r\n                        </div>\r\n                    </mat-form-field>\r\n\r\n                    <div *ngIf=\"userForm.get('address').invalid && (userForm.get('address').touched || userForm.get('address').dirty)\" class=\"alert alert-danger\">\r\n\r\n                        <div *ngIf=\"userForm.get('address').errors.required\">\r\n                            Dirección requerida\r\n                        </div>\r\n\r\n                        <div *ngIf=\"userForm.get('address').errors.maxlength\">\r\n                            Esta dirección es demasiado larga\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n\r\n                <div class=\"formGroup d-flex justify-content-center mt-3 login_container\" style=\"margin-bottom: 5%;\">\r\n                    <button type=\"button\" [disabled]=\"!userForm.valid\" name=\"button\" class=\"btn login_btn\" value=\"Sign Up\" mat-button (click)=\"register_service.SignUp(userEmail.value, userPwd.value); onEnviar2();\">Registrarse</button>\r\n                </div>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n\r\n        <router-outlet></router-outlet>\r\n\r\n    </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { UserService } from '../shared/services/user.service';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: RegisterComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    UserService\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class RegisterModule { }\r\n"],"sourceRoot":"webpack:///"}