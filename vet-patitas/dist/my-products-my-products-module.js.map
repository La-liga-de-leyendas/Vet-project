{"version":3,"sources":["./src/app/pages/my-products/my-products.component.ts","./src/app/pages/my-products/my-products.component.html","./src/app/pages/my-products/my-products.module.ts"],"names":[],"mappings":"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","file":"my-products-my-products-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { ProductsService } from 'src/app/shared/services/products.service';\r\nimport { ProvidersService } from 'src/app/shared/services/providers.service';\r\n\r\n@Component({\r\n  selector: 'app-my-products',\r\n  templateUrl: './my-products.component.html',\r\n  styleUrls: ['./my-products.component.scss']\r\n})\r\nexport class MyProductsComponent implements OnInit {\r\n\r\n  products = [];\r\n  productForm: FormGroup;\r\n\r\n  productSubs: Subscription;\r\n  productGetSubs: Subscription;\r\n  productDeleteSubs: Subscription;\r\n  productUpdateSubs: Subscription;\r\n  idEdit: any;\r\n  onlyName: any;\r\n\r\n  produccts = [];\r\n  proGetSubs: Subscription;\r\n\r\n  constructor(private formBuilder: FormBuilder, private productService: ProductsService, private authService: AuthService, private providerService: ProvidersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadProducts();\r\n    this.loadName();\r\n\r\n    this.productForm = this.formBuilder.group({\r\n      description: ['', [ Validators.required, Validators.maxLength(139)]],\r\n      imageUrl: ['', [Validators.required, Validators.minLength(5)]],\r\n      stock: ['', [Validators.required, Validators.pattern(\"^[1-9][0-9]*$\")]],\r\n      storeId: '',\r\n      price: ['', [ Validators.required, Validators.pattern(\"^[1-9][0-9]*$\")]],\r\n      title: ['', [ Validators.required, Validators.maxLength(31)]],\r\n    });\r\n  }\r\n\r\n  onEnviar2(): void {\r\n    //console.log('FORM GROUP: ', this.productForm.value);\r\n\r\n    this.productSubs = this.productService.addProducts({\r\n        ...this.productForm.value,\r\n        storeId: this.authService.getUserId(),\r\n        storeName: this.onlyName\r\n      }\r\n    ).subscribe(res => {\r\n      //console.log('RSPUESTA: ', res);\r\n      this.loadProducts();\r\n    },\r\n      err => {\r\n        //console.log('ERROR DE SERVIDOR');\r\n      }\r\n    );\r\n  }\r\n\r\n  onUpdateProduct(): void {\r\n    this.productUpdateSubs = this.productService.updateProducts(\r\n      this.idEdit,\r\n        {\r\n          ...this.productForm.value,\r\n          storeId: this.authService.getUserId(),\r\n          storeName: this.onlyName\r\n        }\r\n      ).subscribe(\r\n      res => {\r\n        //console.log(res);\r\n        this.loadProducts();\r\n      },\r\n      err => {\r\n        //console.log('ERROR DE SERVIDOR');\r\n      }\r\n    );\r\n  }\r\n\r\n  loadProducts(): void {\r\n    this.products = [];\r\n    const userId = this.authService.getUserId();\r\n    this.productGetSubs = this.productService.getProductsById(userId).subscribe( res => {\r\n      // console.log('RESPUESTA: ', Object.entries(res));\r\n      Object.entries(res).map((p: any) => this.products.push({id: p[0],  ...p[1]}));\r\n    });\r\n\r\n  }\r\n\r\n  onDelete(id: any): void {\r\n    this.productDeleteSubs = this.productService.deleteProducts(id).subscribe(\r\n      res => {\r\n        //console.log(res);\r\n        this.loadProducts();\r\n      },\r\n      err => {\r\n        //console.log('ERROR DE SERVIDOR');\r\n      }\r\n    );\r\n  }\r\n\r\n  onEdit(product): void {\r\n    this.idEdit = product.id;\r\n    this.productForm.patchValue(product);\r\n  }\r\n\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.productSubs ? this.productSubs.unsubscribe() : '';\r\n    this.productGetSubs ? this.productGetSubs.unsubscribe() : '';\r\n    this.productDeleteSubs ? this.productDeleteSubs.unsubscribe() : '';\r\n    this.productUpdateSubs ? this.productUpdateSubs.unsubscribe() : '';\r\n  }\r\n\r\n\r\n  loadName(): void {\r\n    this.produccts = [];\r\n    let aaa = \"ss\";\r\n    const userId = this.authService.getUserId();\r\n    this.proGetSubs = this.providerService.getProviderById(userId).subscribe( res => {\r\n      // console.log('RESPUESTA: ', Object.entries(res));\r\n      Object.entries(res).map((p: any) => this.produccts.push({id: p[0],  ...p[1]}));\r\n\r\n      aaa = Object.values(this.produccts)[0].storeName;\r\n      console.log('es el mail talvez: ', aaa);\r\n      this.loadOnlyName(aaa);\r\n    });\r\n\r\n    console.log('nnnnnnn: ', aaa);\r\n\r\n\r\n  }\r\n\r\n  loadOnlyName(name): void {\r\n    this.onlyName = name;\r\n    console.log('solo el mail: ', this.onlyName);\r\n\r\n\r\n  }\r\n\r\n}\r\n","<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n<mat-drawer-container class=\"example-container\" style=\"width: 100%; height: fit-content; padding-top: 4%; padding-left: 2%;\">\r\n    <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\" style=\"width: 300px; height: 100%; margin-top: 20px; padding-top: 4%; padding-left: 2%; background: ghostwhite;\" [position]=\"'end'\">     \r\n        <img src=\"../../assets/images/form.png\" alt=\"Formulario\" height=\"20%\" width=\"100%\" style=\"margin-top: 20%;\">\r\n        <div style=\"text-align: center; padding-right: 5%; padding-top: 10%;padding-bottom: 12%;\">\r\n            <h1 style=\"font-weight: bold;\">PRODUCTOS</h1> <br>\r\n            <h5>Llena todos los campos de información para mejorar la experiencia de compra para el cliente.\r\n                Recuerda reservar su pedido en tu stock y contáctate con ellos tan pronto veas su pedido.\r\n            </h5>\r\n        </div>\r\n           <div style=\"display : flex; flex-direction: column;\">\r\n\r\n            <form [formGroup]=\"productForm\">\r\n\r\n                <mat-form-field appearance=\"fill\" style=\"width: 95%\">\r\n                    <mat-label>Título</mat-label>\r\n                    <input matInput formControlName=\"title\" type=\"text\" maxlength=\"32\">\r\n                </mat-form-field>\r\n            \r\n                <div *ngIf=\"productForm.get('title').invalid && (productForm.get('title').touched || productForm.get('title').dirty)\"\r\n                class=\"alert alert-danger\" style=\"width: 95%\">\r\n\r\n                <div *ngIf=\"productForm.get('title').errors.required\">\r\n                    Se requiere un título\r\n                </div>\r\n\r\n                <div *ngIf=\"productForm.get('title').errors.maxlength\">\r\n                    Título demasiado largo\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"fill\" style=\"width: 95%\">\r\n                    <mat-label>Descripción</mat-label>\r\n                    <input matInput formControlName=\"description\" type=\"text\" maxlength=\"140\">\r\n                </mat-form-field>\r\n\r\n                <div *ngIf=\"productForm.get('description').invalid && (productForm.get('description').touched || productForm.get('description').dirty)\"\r\n                    class=\"alert alert-danger \" style=\"width: 95%\">\r\n\r\n                    <div *ngIf=\"productForm.get('description').errors.required\">\r\n                        Se requiere una descripción\r\n                    </div>\r\n\r\n                    <div *ngIf=\"productForm.get('description').errors.maxlength\">\r\n                        Descripción demasiado larga\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <mat-form-field appearance=\"fill\" style=\"width: 95%\">\r\n                    <mat-label>URL de Imagen</mat-label>\r\n                    <input matInput formControlName=\"imageUrl\" type=\"text\">\r\n                </mat-form-field>\r\n                <div *ngIf=\"productForm.get('imageUrl').invalid && (productForm.get('imageUrl').touched || productForm.get('imageUrl').dirty)\"\r\n                class=\"alert alert-danger\" style=\"width: 95%\">\r\n\r\n                <div *ngIf=\"productForm.get('imageUrl').errors.required\">\r\n                    Se requiere el enlace a una imagen\r\n                </div>\r\n\r\n                <div *ngIf=\"productForm.get('imageUrl').errors.minlength\">\r\n                    Este enlace no parece válido\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"fill\" style=\"width: 95%\">\r\n                    <mat-label>Precio</mat-label>\r\n                    <input matInput formControlName=\"price\" type=\"text\" maxlength=\"4\">\r\n                </mat-form-field>\r\n                <div *ngIf=\"productForm.get('price').invalid && (productForm.get('price').touched || productForm.get('price').dirty)\"\r\n                class=\"alert alert-danger\" style=\"width: 95%\">\r\n\r\n                <div *ngIf=\"productForm.get('price').errors.required\">\r\n                    Se requiere un precio\r\n                </div>\r\n\r\n                <div *ngIf=\"productForm.get('price').errors.pattern\">\r\n                    Este precio no es válido\r\n                </div>\r\n            </div>\r\n                <mat-form-field appearance=\"fill\" style=\"width: 95%\">\r\n                    <mat-label>Stock</mat-label>\r\n                    <input matInput formControlName=\"stock\" type=\"text\" maxlength=\"4\">\r\n                </mat-form-field>\r\n                <div *ngIf=\"productForm.get('stock').invalid && (productForm.get('stock').touched || productForm.get('stock').dirty)\"\r\n                class=\"alert alert-danger\" style=\"width: 95%\">\r\n\r\n                <div *ngIf=\"productForm.get('stock').errors.required\">\r\n                    Se requiere una cantidad de stock\r\n                </div>\r\n\r\n                <div *ngIf=\"productForm.get('stock').errors.pattern\">\r\n                    El Stock debe ser un número válido\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n        </div>\r\n        <div style=\"margin-bottom: 20%; margin-left: 7%;\">\r\n        <button mat-button [disabled]=\"!productForm.valid\" style=\"background-color: #CEAC2C; margin-right: 5px;\"\r\n         (click)=\"onEnviar2();\">CREAR</button>\r\n        <button mat-button [disabled]=\"!productForm.valid\" style=\"background-color: #CEAC2C;\" \r\n        (click)=\"onUpdateProduct()\">ACTUALIZAR</button>\r\n    </div>\r\n    </mat-drawer>\r\n\r\n    <div style=\"text-align: center; padding: 4%; \">\r\n        <button type=\"button\" class=\"btn btn-outline-success\"\r\n            style=\"background: #CEAC2C; font-size:150%; color: beige; padding-top: 1%;padding-bottom: 1%; padding-right: 3%; padding-left: 2%;\"\r\n            mat-button (click)=\"drawer.toggle()\">\r\n            AÑADIR UN PRODUCTO<i class=\"fas fa-folder-plus fa-2x\" style=\"padding-left: 3%;\"></i>\r\n        </button>\r\n    </div>\r\n\r\n\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let product of products\" class=\"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4\" \r\n        style=\"margin-bottom: 5%; padding-left: 3%; padding-right: 3%;\">\r\n        <mat-card class=\"example-card text-black bg-primary123 mb-3\"\r\n        style=\"margin-bottom: 10%; margin-left: 10%; margin-right: 10%; height: 100%\">\r\n        <div style=\"height: 80%;\">\r\n                <mat-card-header>\r\n                    <mat-card-title>{{product.title}}</mat-card-title>\r\n                    <mat-card-subtitle>{{product.price}} Bs.</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <img mat-card-image [src]=\"product.imageUrl\" alt=\"Foto del Producto\" style=\"height: 270px;\">\r\n                <mat-card-content style=\"height: 120px; overflow-y: auto;\">\r\n                    <p>\r\n                        Descripción: {{product.description}}\r\n                    </p>\r\n                    <p>\r\n                        Stock: {{product.stock}}\r\n                    </p>\r\n                </mat-card-content>\r\n            </div>\r\n                <mat-card-actions>\r\n                    <div style=\" bottom: 5%; cursor: pointer; display: block; text-align: center; \">\r\n                    <button mat-button style=\"background-color: #CEAC2C;border-radius: 15px; margin: 3%; \"\r\n                     (click)=\"onEdit(product); drawer.toggle()\">EDITAR</button>\r\n                    <button mat-button style=\"background-color: #CEAC2C;border-radius: 15px;  margin: 3%;\"\r\n                     (click)=\"onDelete(product.id)\">ELIMINAR</button>\r\n                </div>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</mat-drawer-container>\r\n\r\n\r\n\r\n\r\n\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MyProductsComponent } from './my-products.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { ProductsService } from 'src/app/shared/services/products.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MyProductsComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyProductsComponent\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    ProductsService\r\n  ]\r\n})\r\nexport class MyProductsModule { }\r\n"],"sourceRoot":"webpack:///"}